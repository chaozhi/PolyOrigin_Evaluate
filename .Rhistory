# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
devtools::install_github("mmollina/mappoly", dependencies=TRUE)
remove.packages("mappoly")
packageVersion("mappoly")
remove.packages("mappoly")
# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
devtools::install_github("mmollina/mappoly", dependencies=TRUE)
install.packages("rgl", lib="C:/MyPrograms/R/R-4.0.4/library")
install.packages("rgl")
install.packages("zip")
# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
devtools::install_github("mmollina/mappoly", dependencies=TRUE)
install.packages("C:/Users/zheng026/Downloads/rgl_0.105.22.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/zheng026/Downloads/rgl_0.105.13.zip", repos = NULL, type = "win.binary")
# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
devtools::install_github("mmollina/mappoly", dependencies=TRUE)
# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
devtools::install_github("mmollina/mappoly", dependencies=TRUE)
# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
# devtools::install_github("mmollina/mappoly", dependencies=TRUE)
# 1: All
# 2: CRAN packages only
# 3: None
# 4: rgl (0.105.13 -> 0.105.22) [CRAN]
# remove.packages("mappoly")
library(mappoly)
packageVersion("mappoly")
# install.packages("devtools")
# devtools::install_github("jendelman/diaQTL")
devtools::install_github("mmollina/mappoly", dependencies=TRUE)
library(rstudioapi)
workdir=dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(workdir)
getwd()
# prepare input genofile for mappoly
popsizels=c(10,15,20,30,50,100,200)
for (dr in c(0,0.5))
for (popsize in popsizels)
for (rep in 1:50){
dataid=paste0("F1_noff", popsize,"_DR",dr,"_rep",rep,"_")
genofile = paste0("F1data/",dataid,"polyorigin_geno_snparray.csv")
tmp = read.csv(genofile,strip.white=TRUE,sep=',')
tmp = tmp[,c(1,4,5,2,3,6:ncol(tmp))]
genofile2 = paste0("res_mappoly/",dataid,"polyorigin_geno_snparray_mappoly.csv")
write.csv(tmp,file=genofile2,row.names=FALSE)
}
library(rstudioapi)
workdir=dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(workdir)
getwd()
# prepare input genofile for mappoly
popsizels=c(10,15,20,30,50,100,200)
for (dr in c(0,0.5))
for (popsize in popsizels)
for (rep in 1:50){
dataid=paste0("F1_noff", popsize,"_DR",dr,"_rep",rep,"_")
genofile = paste0("F1data/",dataid,"polyorigin_geno_snparray.csv")
tmp = read.csv(genofile,strip.white=TRUE,sep=',')
tmp = tmp[,c(1,4,5,2,3,6:ncol(tmp))]
genofile2 = paste0("res_mappoly/",dataid,"polyorigin_geno_snparray_mappoly.csv")
write.csv(tmp,file=genofile2,row.names=FALSE)
}
